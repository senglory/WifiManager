<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:WiFiManager"
             x:Class="WiFiManager.MainPage">

    <ContentPage.Resources>

        
        <!-- Default DataTemplate -->
        <DataTemplate x:Key="DefaultDataTemplate">
        </DataTemplate>
        <DataTemplate x:Key="NoteDataTemplate">
            <ViewCell>
                <StackLayout Orientation="Vertical"  HorizontalOptions="Fill" >
                    <StackLayout.Resources>
                        <Style TargetType="StackLayout">
                            <Style.Triggers>
                                <Trigger TargetType="StackLayout" Property="IsFocused" Value="True">
                                    <Setter Property="BackgroundColor" Value="OrangeRed" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackLayout.Resources>
                    <Label Text="{Binding Name}" />
                    <Label Text="{Binding BssID}" />
                </StackLayout>
            </ViewCell>
        </DataTemplate>
        <DataTemplate x:Key="EditNoteDataTemplate">
            <ViewCell>
                <StackLayout Orientation="Vertical"  HorizontalOptions="Fill">
                    <Entry Text="{Binding Name}" />
                    <Entry Text="{Binding BssID}" />
                </StackLayout>
            </ViewCell>
        </DataTemplate>

        <local:ItemTemplateSelector x:Key="viewInListTemplateSelector"
              DefaultnDataTemplate="{StaticResource DefaultDataTemplate}"
              NoteDataTemplate="{StaticResource NoteDataTemplate}" 
                                        />

        <local:BooleanInverseConverter x:Key="booleanInverse" />
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="Green" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="TextColor" Value="Green" />
                <Setter Property="BackgroundColor" Value="Black" />
                <Setter Property="BorderColor" Value="Beige" />
                <Setter Property="BorderWidth" Value="1" />
            </Style>
            <Style TargetType="StackLayout">
                <Setter Property="BackgroundColor" Value="Black" />
            </Style>
            <Style TargetType="ListView">
                <Setter Property="BackgroundColor" Value="Black" />
            </Style>


        </ResourceDictionary>
    </ContentPage.Resources>
    <StackLayout>
        <ActivityIndicator x:Name="pleaseWait"
                           IsRunning="False"
                           IsVisible="False"
                           VerticalOptions="Center" 
                           BackgroundColor="Black"
                           />
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="200" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
        </Grid>
        <StackLayout Grid.Row="0" HorizontalOptions="Fill" Orientation="Horizontal">
            <Button Text="Save" Command="{Binding SaveCommand}" ></Button>
            <Button Text="Refresh" Clicked="RefreshNetworks_Clicked" ></Button>
        </StackLayout>

        <ListView
            x:Name="lstNetworks"
            Grid.Row="1"
            VerticalOptions="FillAndExpand" 
            SeparatorColor="Beige"
            ItemsSource="{Binding WifiNetworks}"
            SelectedItem="{Binding SelectedNetwork}"
            ItemTemplate="{StaticResource viewInListTemplateSelector}"
            >
            <!-- The behavior that allows to use a command for the SelectedItem event -->
            <!--<behaviorsPack:SelectedItemBehavior Command="{Binding ItemSelectedCommand}" />-->
            <!--<ListView.Behaviors>
            </ListView.Behaviors>-->
            <!--<ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <MultiTrigger TargetType="ListViewItem">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Path=Selected}" Value="true" />
                                <BindingCondition Binding="{Binding Path=Focused}" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ListViewItem.BackColor" Value="Pink" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>-->
        </ListView>
        <StackLayout Grid.Row="2" x:Name="DetailsArea" BindingContext="{Binding  SelectedItem,Source={x:Reference lstNetworks}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <StackLayout Grid.Row="0" HorizontalOptions="FillAndExpand">
                    <Label Text="{Binding Name}"></Label>
                    <StackLayout HorizontalOptions="FillAndExpand" Padding="5">
                        <Label Text="Password"></Label>
                        <Entry Text="{Binding Password}" WidthRequest="100"></Entry>
                        <Switch x:Name="ctlIsEnabled" IsToggled="{Binding Path=IsEnabled,
                                       Converter={StaticResource booleanInverse}}"></Switch>
                    </StackLayout>
                </StackLayout>
                <ListView Grid.Row="1" x:Name="lstCoords" ItemsSource="{Binding CoordsAndPower}" >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell>
                                <StackLayout Orientation="Horizontal" HorizontalOptions="Fill" BackgroundColor="Ivory">
                                    <Label Text="{Binding Lat}"></Label>
                                    <Label Text="{Binding Long}"></Label>
                                    <Label Text="{Binding Power}"></Label>
                                </StackLayout>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackLayout Grid.Row="2" Orientation="Horizontal" HorizontalOptions="Fill">
                    <Button Text="Refresh Coords" Clicked="RefreshCoords_Clicked"  />
                    <Button Text="Connect/Disconnect" Clicked="ConnDisconn_Clicked" BindingContext="{x:Reference Name=ctlIsEnabled}"  IsEnabled="{Binding Path=IsToggled}"/>
                </StackLayout>
            </Grid>
        </StackLayout>
    </StackLayout>

</ContentPage>
